# TODO: add default vals?

record(ao, "$(P)$(M1):setPulseDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))PULSE_DIV_0")
	field(VAL,  3)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M2):setPulseDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))PULSE_DIV_1")
	field(VAL,  3)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M3):setPulseDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))PULSE_DIV_2")
	field(VAL,  3)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M4):setPulseDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))PULSE_DIV_3")
	field(VAL,  3)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M5):setPulseDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))PULSE_DIV_4")
	field(VAL,  3)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M6):setPulseDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))PULSE_DIV_5")
	field(VAL,  3)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M1):setRampDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RAMP_DIV_0")
	field(VAL,  7)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M2):setRampDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RAMP_DIV_1")
	field(VAL,  7)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M3):setRampDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RAMP_DIV_2")
	field(VAL,  7)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M4):setRampDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RAMP_DIV_3")
	field(VAL,  7)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M5):setRampDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RAMP_DIV_4")
	field(VAL,  7)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M6):setRampDiv")
{
	field(DESC, "Pulse Divisor")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RAMP_DIV_5")
	field(VAL,  7)
	field(DRVL, 0)
	field(DRVH, 13)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M1):setRunCurrent")
{
	field(DESC, "Run Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RUN_CURRENT_0")
	field(VAL,  127)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M2):setRunCurrent")
{
	field(DESC, "Run Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RUN_CURRENT_1")
	field(VAL,  127)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M3):setRunCurrent")
{
	field(DESC, "Run Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RUN_CURRENT_2")
	field(VAL,  127)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M4):setRunCurrent")
{
	field(DESC, "Run Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RUN_CURRENT_3")
	field(VAL,  127)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M5):setRunCurrent")
{
	field(DESC, "Run Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RUN_CURRENT_4")
	field(VAL,  127)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M6):setRunCurrent")
{
	field(DESC, "Run Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))RUN_CURRENT_5")
	field(VAL,  127)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M1):setStandbyCurrent")
{
	field(DESC, "Standby Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))STANDBY_CURRENT_0")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M2):setStandbyCurrent")
{
	field(DESC, "Standby Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))STANDBY_CURRENT_1")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M3):setStandbyCurrent")
{
	field(DESC, "Standby Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))STANDBY_CURRENT_2")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M4):setStandbyCurrent")
{
	field(DESC, "Standby Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))STANDBY_CURRENT_3")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M5):setStandbyCurrent")
{
	field(DESC, "Standby Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))STANDBY_CURRENT_4")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M6):setStandbyCurrent")
{
	field(DESC, "Standby Current")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))STANDBY_CURRENT_5")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 255)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M1):setUStepRes")
{
	field(DESC, "Microstep Resolution")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))USTEP_RES_0")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 8)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M2):setUStepRes")
{
	field(DESC, "Microstep Resolution")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))USTEP_RES_1")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 8)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M3):setUStepRes")
{
	field(DESC, "Microstep Resolution")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))USTEP_RES_2")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 8)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M4):setUStepRes")
{
	field(DESC, "Microstep Resolution")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))USTEP_RES_3")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 8)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M5):setUStepRes")
{
	field(DESC, "Microstep Resolution")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))USTEP_RES_4")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 8)
	field(PINI, "YES")
	field(PREC, 0)
}
record(ao, "$(P)$(M6):setUStepRes")
{
	field(DESC, "Microstep Resolution")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR))USTEP_RES_5")
	field(VAL,  8)
	field(DRVL, 0)
	field(DRVH, 8)
	field(PINI, "YES")
	field(PREC, 0)
}
